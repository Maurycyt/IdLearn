image: ubuntu

stages:          # List of stages for jobs, and their order of execution
  - build

#workflow:        # Rule to execute only on merge requests because Maven takes long as fuuuck.
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

all-in-one-job:       # This job does all there is to be done, including testing, apparently. https://stackoverflow.com/a/17123957/14406682
  stage: build
  script:
    - echo "Starting maven execution..."
    - apt update
    - apt install -y openjdk-17-jre-headless openjdk-17-jdk-headless
    - pwd

    # Install maven 3.8.5
    - apt install -y wget
    - apt install -y tar
    - wget https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
    - mkdir -p /usr/local/apache-maven
    - mv apache-maven-3.8.5-bin.tar.gz /usr/local/apache-maven
#    - cd /usr/local/apache-maven
    - tar -xzvf /usr/local/apache-maven/apache-maven-3.8.5-bin.tar.gz --directory /usr/local/apache-maven

    - export M2_HOME=/usr/local/apache-maven/apache-maven-3.8.5
    - export M2=$M2_HOME/bin
    - export MAVEN_OPTS="-Xms256m -Xmx512m"
    - export PATH=$M2:$PATH
    - source ~/.profile

    # Check versions
    - java --version
    - mvn --version
    - update-alternatives --config java
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - pwd
    - apt install -y tree
    - tree

    # Install make and g++
    - apt install -y make
    - apt install -y software-properties-common
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    - apt update
    - apt install -y g++-11
    - g++ --version

    # Install
    - mvn clean install -X -B -Dstyle.color=always
    - echo "Maven execution complete."